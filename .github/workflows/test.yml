name: Tests

on:
  push:
    branches: [ main, Development ]
  pull_request:
    branches: [ main, Development ]

jobs:
  tests:
    runs-on: ubuntu-latest
    
    services:
      mariadb:
        image: mariadb:10.6
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping -h localhost -uroot -proot" --health-interval=10s --health-timeout=5s --health-retries=3
        
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libmariadb-dev libffi-dev libjpeg-dev libfreetype6-dev liblcms2-dev libwebp-dev python3-dev libxml2-dev libxslt1-dev redis-server redis-tools
          
          # Verify Redis is installed
          redis-server --version
          redis-cli --version
      
      - name: Install frappe-bench
        id: install-bench
        run: |
          echo "Installing frappe-bench..."
          pip install -U pip
          pip install frappe-bench
          which bench
          
      - name: Setup bench
        id: setup-bench
        run: |
          echo "Setting up bench..."
          # Create a bench.conf file with redis configuration
          mkdir -p ~/bench-conf
          cat > ~/bench-conf/bench.conf << EOL
          [redis]
          host = localhost
          port = 6379
          EOL
          
          # Initialize bench with custom bench.conf
          bench init --skip-assets --frappe-path https://github.com/frappe/frappe --frappe-branch version-15 frappe-bench
          
          # Copy our custom bench.conf to the bench directory
          cp ~/bench-conf/bench.conf frappe-bench/config/bench.conf
          
          cd frappe-bench
          echo "Checking bench directory..."
          ls -la
          
          # Replace default Redis configuration
          echo "Configuring Redis..."
          sed -i 's/redis_cache = redis://localhost:11000/redis_cache = redis://localhost:6379\/0/g' sites/common_site_config.json || echo "Failed to replace redis_cache"
          sed -i 's/redis_queue = redis://localhost:11000/redis_queue = redis://localhost:6379\/1/g' sites/common_site_config.json || echo "Failed to replace redis_queue"
          sed -i 's/redis_socketio = redis://localhost:12000/redis_socketio = redis://localhost:6379\/2/g' sites/common_site_config.json || echo "Failed to replace redis_socketio"
          
          # Check the modified configuration
          cat sites/common_site_config.json
          
          echo "Setting up requirements..."
          bench setup requirements --dev
          cd ..
          echo "Bench setup complete."
          
      - name: Get ERPNext and current app
        id: get-apps
        if: success() && steps.setup-bench.outcome == 'success'
        run: |
          echo "Getting ERPNext and current app..."
          cd frappe-bench || (echo "frappe-bench directory not found!" && exit 1)
          bench get-app --branch version-15 erpnext https://github.com/frappe/erpnext
          bench get-app pos_restaurant_itb $GITHUB_WORKSPACE
          echo "Current directory structure:"
          ls -la
          echo "Apps directory:"
          ls -la apps/
          cd ..
          
      - name: Setup site for testing
        id: setup-site
        if: success() && steps.get-apps.outcome == 'success'
        run: |
          echo "Setting up site for testing..."
          cd frappe-bench || (echo "frappe-bench directory not found!" && exit 1)
          
          # Update Procfile to listen on all interfaces
          sed -i 's/listen = 127.0.0.1/listen = 0.0.0.0/g' Procfile || echo "Failed to update Procfile"
          
          # Create and setup site
          echo "Creating new site..."
          bench new-site site1.local --admin-password="admin" --db-root-password="root" || (echo "Failed to create site!" && exit 1)
          bench --site site1.local add-to-hosts || echo "Failed to add site to hosts"
          bench --site site1.local set-config allow_tests true || echo "Failed to set allow_tests"
          
          # Install apps on site
          echo "Installing apps on site..."
          bench --site site1.local install-app erpnext || (echo "Failed to install erpnext!" && exit 1)
          bench --site site1.local install-app pos_restaurant_itb || (echo "Failed to install pos_restaurant_itb!" && exit 1)
          
          echo "Site setup complete."
          cd ..
          
      - name: Run tests
        id: run-tests
        if: success() && steps.setup-site.outcome == 'success'
        run: |
          echo "Running tests..."
          cd frappe-bench || (echo "frappe-bench directory not found!" && exit 1)
          mkdir -p sites/site1.local/logs || echo "Failed to create logs directory"
          touch sites/site1.local/logs/frappe.log || echo "Failed to create frappe.log"
          touch sites/site1.local/logs/tests.log || echo "Failed to create tests.log"
          bench --site site1.local run-tests --app pos_restaurant_itb || echo "Tests failed but continuing"
          cd ..
          
      - name: Display logs
        if: always()
        run: |
          echo "Displaying logs..."
          cd $GITHUB_WORKSPACE
          echo "Current directory: $(pwd)"
          ls -la
          
          if [ -d "frappe-bench" ]; then
            cd frappe-bench
            echo "frappe-bench directory exists, checking logs..."
            
            echo "Content of sites directory:"
            ls -la sites/
            
            echo "Content of config directory:"
            ls -la config/
            
            echo "Common site config:"
            cat sites/common_site_config.json || echo "No common_site_config.json found"
            
            if [ -d "sites/site1.local/logs" ]; then
              echo "Logs directory exists"
              ls -la sites/site1.local/logs/
              
              echo "=== Frappe Log ==="
              if [ -f "sites/site1.local/logs/frappe.log" ]; then
                cat sites/site1.local/logs/frappe.log
              else 
                echo "No frappe.log found"
              fi
              
              echo ""
              echo "=== Tests Log ==="
              if [ -f "sites/site1.local/logs/tests.log" ]; then
                cat sites/site1.local/logs/tests.log
              else
                echo "No tests.log found"
              fi
            else
              echo "Logs directory not found"
              echo "Contents of sites/site1.local directory:"
              ls -la sites/site1.local/ || echo "sites/site1.local/ directory not found"
            fi
          else
            echo "frappe-bench directory not found in $GITHUB_WORKSPACE"
            echo "Listing current directory:"
            ls -la
          fi